{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/dist/errors-e1a2656b.browser.esm.js"],
  "sourcesContent": ["import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\nimport { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass Connector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"chains\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"ready\", void 0);\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(message);\n    _defineProperty(this, \"cause\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, Connector as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ChainNotConfiguredError as a, ConnectorNotFoundError as b };\n"],
  "mappings": "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",
  "names": []
}
