{
  "version": 3,
  "sources": ["../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/create-context.js", "../../preact/src/constants.js", "../../preact/src/diff/children.js", "../../preact/src/diff/props.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/hooks/src/index.js"],
  "sourcesContent": ["import { EMPTY_ARR } from './constants';\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": ["assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "vnodeId", "options", "createRef", "current", "Fragment", "Component", "context", "this", "getDomSibling", "childIndex", "indexOf", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "__r", "prevDebounce", "debounceRendering", "defer", "renderQueueLength", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "sort", "depthSort", "shift", "__P", "diff", "__n", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "Array", "isArray", "EMPTY_OBJ", "reorderChildren", "placeChild", "getLastDom", "nextSibling", "unmount", "applyRef", "tmp", "toChildArray", "out", "some", "nextDom", "sibDom", "outer", "appendChild", "insertBefore", "lastDom", "diffProps", "dom", "newProps", "oldProps", "hydrate", "setProperty", "setStyle", "style", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "event", "newVNode", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "newType", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "diffElementNodes", "diffed", "root", "cb", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "checked", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "Promise", "then", "bind", "resolve", "setTimeout", "a", "b", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "__V", "EMPTY", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "__b", "__r", "diffed", "unmount", "vnode", "commitQueue", "hasErrored"]
}
