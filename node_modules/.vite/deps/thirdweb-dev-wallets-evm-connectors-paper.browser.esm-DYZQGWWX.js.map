{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/evm/connectors/paper/dist/thirdweb-dev-wallets-evm-connectors-paper.browser.esm.js"],
  "sourcesContent": ["import { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-eea39a9a.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { T as TWConnector } from '../../../../dist/tw-connector-443c384d.browser.esm.js';\nimport { UserStatus } from '@paperxyz/embedded-wallet-service-sdk';\nimport { utils } from 'ethers';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport '../../../../dist/checkPrivateRedeclaration-3aaaa21d.browser.esm.js';\nimport 'eventemitter3';\n\nconst PaperChainMap = {\n  1: \"Ethereum\",\n  5: \"Goerli\",\n  137: \"Polygon\",\n  80001: \"Mumbai\",\n  43114: \"Avalanche\"\n};\nvar _paper = /*#__PURE__*/new WeakMap();\nvar _signer = /*#__PURE__*/new WeakMap();\nclass PaperWalletConnector extends TWConnector {\n  constructor(options) {\n    super();\n    _defineProperty(this, \"id\", \"paper-wallet\");\n    _defineProperty(this, \"name\", \"Paper Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"user\", null);\n    _classPrivateFieldInitSpec(this, _paper, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"options\", void 0);\n    _classPrivateFieldInitSpec(this, _signer, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        await this.onDisconnect();\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.emit(\"disconnect\");\n    });\n    this.options = options;\n  }\n  getPaperSDK() {\n    if (!_classPrivateFieldGet(this, _paper)) {\n      _classPrivateFieldSet(this, _paper, new Promise(async (resolve, reject) => {\n        try {\n          if (!(this.options.chain.chainId in PaperChainMap)) {\n            throw new Error(\"Unsupported chain id: \" + this.options.chain.chainId);\n          }\n          const {\n            PaperEmbeddedWalletSdk\n          } = await import('@paperxyz/embedded-wallet-service-sdk');\n          const chainName = PaperChainMap[this.options.chain.chainId];\n          resolve(new PaperEmbeddedWalletSdk({\n            clientId: this.options.clientId,\n            chain: chainName\n          }));\n        } catch (err) {\n          reject(err);\n        }\n      }));\n    }\n    return _classPrivateFieldGet(this, _paper);\n  }\n  async connect() {\n    const paperSDK = await this.getPaperSDK();\n    if (!paperSDK) {\n      throw new Error(\"Paper SDK not initialized\");\n    }\n    let user = await paperSDK.getUser();\n    switch (user.status) {\n      case UserStatus.LOGGED_OUT:\n        {\n          const authResult = await paperSDK.auth.loginWithPaperModal();\n          this.user = authResult.user;\n          break;\n        }\n      case UserStatus.LOGGED_IN_WALLET_INITIALIZED:\n        {\n          this.user = user;\n          break;\n        }\n    }\n    if (!this.user) {\n      throw new Error(\"Error connecting User\");\n    }\n    this.setupListeners();\n    return this.getAddress();\n  }\n  async disconnect() {\n    // await this.paper?.auth.logout();\n    this.user = null;\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return signer.getAddress();\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch (e) {\n      return false;\n    }\n  }\n  async getProvider() {\n    const signer = await this.getSigner();\n    if (!signer.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    return signer.provider;\n  }\n  async getSigner() {\n    if (_classPrivateFieldGet(this, _signer)) {\n      return _classPrivateFieldGet(this, _signer);\n    }\n    if (!this.user) {\n      const paperSDK = await this.getPaperSDK();\n      let user = await paperSDK.getUser();\n      switch (user.status) {\n        case UserStatus.LOGGED_IN_WALLET_INITIALIZED:\n          {\n            this.user = user;\n            break;\n          }\n      }\n    }\n    const signer = await this.user?.wallet.getEthersJsSigner({\n      rpcEndpoint: this.options.chain.rpc[0]\n    });\n    if (!signer) {\n      throw new Error(\"Signer not found\");\n    }\n    _classPrivateFieldSet(this, _signer, signer);\n    return signer;\n  }\n  async isAuthorized() {\n    return false;\n  }\n  async switchChain(chainId) {\n    // check if chainId is supported or not\n    if (!(chainId in PaperChainMap)) {\n      throw new Error(\"Chain not supported\");\n    }\n    const chainName = PaperChainMap[chainId];\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not configured\");\n    }\n\n    // update chain in wallet\n    await this.user?.wallet.setChain({\n      chain: chainName\n    });\n\n    // update signer\n    _classPrivateFieldSet(this, _signer, await this.user?.wallet.getEthersJsSigner({\n      rpcEndpoint: chain.rpc[0]\n    }));\n    this.emit(\"change\", {\n      chain: {\n        id: chainId,\n        unsupported: false\n      }\n    });\n  }\n\n  // private getUser() {\n  //   if (!this.user) {\n  //     throw new Error(\"User not found\");\n  //   }\n  //   return this.user;\n  // }\n\n  async setupListeners() {\n    const provider = await this.getProvider();\n    if (provider.on) {\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n    }\n  }\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n  isChainUnsupported(chainId) {\n    return !(chainId in PaperChainMap);\n  }\n  async getEmail() {\n    await this.getProvider();\n    if (!this.user) {\n      throw new Error(\"No user found, Paper Wallet is not connected\");\n    }\n    return this.user.authDetails.email;\n  }\n}\n\nexport { PaperChainMap, PaperWalletConnector };\n"],
  "mappings": "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",
  "names": []
}
